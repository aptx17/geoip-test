name: Build geoip files
on:
  workflow_dispatch:
  # schedule:
    # - cron: "0 0 * * 4"
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build.yml'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Set variables
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash

      - name: Download GeoLite2 databases
        run: |
          mkdir -p output
          curl -L "https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-ASN.tar.gz" -o ./output/GeoLite2-ASN.tar.gz
          curl -L "https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-ASN-CSV.zip" -o ./output/GeoLite2-ASN-CSV.zip
          curl -L "https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-Country.tar.gz" -o ./output/GeoLite2-Country.tar.gz
          curl -L "https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-Country-CSV.zip" -o ./output/GeoLite2-Country-CSV.zip

      - name: Prepare GeoLite2 databases
        run: |
          cp ./output/{*.gz,*.zip} ./
          unzip GeoLite2-Country-CSV.zip
          unzip GeoLite2-ASN-CSV.zip
          tar -xvzf GeoLite2-Country.tar.gz
          tar -xvzf GeoLite2-ASN.tar.gz

          cp GeoLite2-Country_*/*.mmdb ./output/
          cp GeoLite2-ASN_*/*.mmdb ./output/
          cp GeoLite2-Country-CSV_*/{GeoLite2-Country-Blocks-*,GeoLite2-Country-Locations-en,GeoLite2-Country-Locations-zh-CN}.csv ./output/
          cp GeoLite2-ASN-CSV_*/*.csv ./output/

          mkdir -p geolite2
          cp GeoLite2-Country-CSV_*/*.csv ./geolite2/
          cp GeoLite2-ASN-CSV_*/*.csv ./geolite2/

      - name: Build geoip files
        run: |
          go build ./
          ./geoip convert -c ./config.json

      - name: Move files to publish directory
        run: |
          mkdir -p publish
          ls
          mv ./output/dat/geoip-only-cn-private.dat ./output/maxmind/Country-only-cn-private.mmdb ./publish/
          cp -fpPR ./output/text ./publish

      - name: Git push assets to "release" branch
        run: |
          cd publish || exit 1
          ls
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add geoip "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u geoip release

      - name: Purge jsdelivr CDN
        run: |
          cd output || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${file}"
          done

      - name: Remove some files to avoid publishing to GitHub release
        run: rm -rf ./publish/*.{gz,zip} ./publish/text
